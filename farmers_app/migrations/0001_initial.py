# Generated by Django 5.2.4 on 2025-08-16 07:59

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/')),
                ('icon', models.CharField(blank=True, help_text='Font awesome icon class', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=3, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Counties',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('user_type', models.CharField(blank=True, max_length=20)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('interests', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlatformAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_farmers', models.PositiveIntegerField(default=0)),
                ('total_buyers', models.PositiveIntegerField(default=0)),
                ('total_transporters', models.PositiveIntegerField(default=0)),
                ('new_registrations', models.PositiveIntegerField(default=0)),
                ('total_products', models.PositiveIntegerField(default=0)),
                ('new_products', models.PositiveIntegerField(default=0)),
                ('active_products', models.PositiveIntegerField(default=0)),
                ('total_orders', models.PositiveIntegerField(default=0)),
                ('completed_orders', models.PositiveIntegerField(default=0)),
                ('cancelled_orders', models.PositiveIntegerField(default=0)),
                ('gross_sales', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('platform_commission', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('farmer_payouts', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('transporter_payouts', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='PlatformWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_commission_earned', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_fees_collected', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_payouts_made', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('description', models.CharField(blank=True, max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['key'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('farmer', 'Farmer'), ('buyer', 'Buyer'), ('transporter', 'Transporter'), ('admin', 'Admin')], default='buyer', max_length=20)),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?254\\d{9}$', 'Enter a valid Kenyan phone number')])),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BuyerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buyer_type', models.CharField(choices=[('individual', 'Individual Consumer'), ('restaurant', 'Restaurant/Hotel'), ('retailer', 'Retailer/Shop'), ('processor', 'Food Processor'), ('exporter', 'Exporter'), ('institution', 'Institution (School, Hospital)')], default='individual', max_length=20)),
                ('business_name', models.CharField(blank=True, max_length=200)),
                ('delivery_address', models.TextField()),
                ('mpesa_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?254\\d{9}$')])),
                ('alternative_phone', models.CharField(blank=True, max_length=15)),
                ('preferred_products', models.TextField(blank=True, help_text='Comma-separated list')),
                ('max_delivery_distance', models.PositiveIntegerField(default=50, help_text='Maximum delivery distance in km')),
                ('total_orders', models.PositiveIntegerField(default=0)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_profile', to=settings.AUTH_USER_MODEL)),
                ('county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farmers_app.county')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='farmers_app.buyerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('user_type', models.CharField(blank=True, max_length=20)),
                ('subject', models.CharField(choices=[('general', 'General Inquiry'), ('product', 'Product Information'), ('order', 'Order Inquiry'), ('technical', 'Technical Support'), ('partnership', 'Partnership'), ('farmer_onboarding', 'Farmer Registration'), ('transporter_onboarding', 'Transporter Registration')], max_length=50)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('is_responded', models.BooleanField(default=False)),
                ('response', models.TextField(blank=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('responded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('county', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='farmers_app.county')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FarmerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farm_name', models.CharField(max_length=200)),
                ('farm_size', models.DecimalField(decimal_places=2, help_text='Size in acres', max_digits=8)),
                ('farm_type', models.CharField(choices=[('crops', 'Crop Farming'), ('livestock', 'Livestock'), ('poultry', 'Poultry'), ('dairy', 'Dairy Farming'), ('mixed', 'Mixed Farming'), ('organic', 'Organic Farming'), ('greenhouse', 'Greenhouse Farming')], default='crops', max_length=20)),
                ('specific_location', models.CharField(help_text='Village, estate, or landmark', max_length=200)),
                ('mpesa_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?254\\d{9}$')])),
                ('bank_account', models.CharField(blank=True, max_length=50)),
                ('bank_name', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('years_experience', models.PositiveIntegerField(default=0)),
                ('certifications', models.TextField(blank=True, help_text='Organic, GAP, etc.')),
                ('total_sales', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('rating', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farmers_app.county')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MarketingCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('campaign_type', models.CharField(choices=[('email', 'Email Campaign'), ('sms', 'SMS Campaign'), ('push', 'Push Notification'), ('whatsapp', 'WhatsApp Broadcast')], max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('target_user_type', models.CharField(blank=True, max_length=20)),
                ('is_scheduled', models.BooleanField(default=False)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('total_sent', models.PositiveIntegerField(default=0)),
                ('total_delivered', models.PositiveIntegerField(default=0)),
                ('total_opened', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('target_counties', models.ManyToManyField(blank=True, to='farmers_app.county')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('delivery_address', models.TextField()),
                ('delivery_phone', models.CharField(max_length=15)),
                ('delivery_notes', models.TextField(blank=True)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=12)),
                ('delivery_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('service_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(choices=[('pending', 'Pending Payment'), ('paid', 'Paid - Awaiting Pickup'), ('assigned', 'Driver Assigned'), ('picked_up', 'Picked Up from Farm'), ('in_transit', 'In Transit'), ('delivered', 'Delivered'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_method', models.CharField(choices=[('mpesa', 'M-Pesa'), ('cash', 'Cash on Delivery'), ('bank', 'Bank Transfer')], default='mpesa', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('picked_up_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('estimated_delivery', models.DateTimeField(blank=True, null=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='farmers_app.buyerprofile')),
                ('delivery_county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farmers_app.county')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MpesaTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('payment', 'Customer Payment'), ('payout_farmer', 'Farmer Payout'), ('payout_transporter', 'Transporter Payout'), ('refund', 'Refund')], max_length=20)),
                ('phone_number', models.CharField(max_length=15)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('merchant_request_id', models.CharField(blank=True, max_length=100)),
                ('checkout_request_id', models.CharField(blank=True, max_length=100)),
                ('mpesa_receipt_number', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('response_code', models.CharField(blank=True, max_length=10)),
                ('response_description', models.TextField(blank=True)),
                ('account_reference', models.CharField(blank=True, max_length=100)),
                ('transaction_desc', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mpesa_transactions', to='farmers_app.order')),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_type', models.CharField(choices=[('assigned', 'Driver Assigned'), ('pickup_started', 'Pickup Started'), ('pickup_completed', 'Pickup Completed'), ('in_transit', 'In Transit'), ('near_destination', 'Near Destination'), ('delivered', 'Delivered'), ('exception', 'Delivery Exception')], max_length=20)),
                ('message', models.TextField()),
                ('location', models.CharField(blank=True, max_length=200)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_updates', to='farmers_app.order')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('sku', models.CharField(help_text='Stock Keeping Unit', max_length=100, unique=True)),
                ('description', models.TextField()),
                ('short_description', models.CharField(blank=True, max_length=300)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('minimum_order', models.DecimalField(decimal_places=2, default=1, max_digits=8)),
                ('available_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('stock_status', models.CharField(choices=[('available', 'Available'), ('low_stock', 'Low Stock'), ('sold_out', 'Sold Out'), ('harvesting', 'Currently Harvesting'), ('pre_order', 'Pre-Order (Future Harvest)')], default='available', max_length=20)),
                ('low_stock_threshold', models.DecimalField(decimal_places=2, default=10, max_digits=8)),
                ('unit', models.CharField(choices=[('kg', 'Kilogram'), ('g', 'Gram'), ('ltr', 'Liter'), ('ml', 'Milliliter'), ('pc', 'Piece'), ('dozen', 'Dozen'), ('bag', 'Bag (90kg)'), ('crate', 'Crate'), ('bunch', 'Bunch'), ('sack', 'Sack'), ('ton', 'Ton'), ('acre', 'Per Acre')], default='kg', max_length=20)),
                ('quality_grade', models.CharField(choices=[('premium', 'Premium Grade'), ('grade_a', 'Grade A'), ('grade_b', 'Grade B'), ('standard', 'Standard'), ('organic', 'Certified Organic')], default='standard', max_length=20)),
                ('variety', models.CharField(blank=True, help_text='e.g., Sukuma Wiki, Improved Kienyeji', max_length=100)),
                ('harvest_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('farming_method', models.CharField(blank=True, help_text='Organic, Conventional, etc.', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_organic', models.BooleanField(default=False)),
                ('is_available_for_preorder', models.BooleanField(default=False)),
                ('total_sold', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='farmers_app.category')),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='farmers_app.farmerprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('product_name', models.CharField(max_length=200)),
                ('product_sku', models.CharField(max_length=100)),
                ('unit', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farmers_app.farmerprofile')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='farmers_app.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farmers_app.product')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('order_placed', 'Order Placed'), ('order_confirmed', 'Order Confirmed'), ('payment_received', 'Payment Received'), ('driver_assigned', 'Driver Assigned'), ('pickup_scheduled', 'Pickup Scheduled'), ('in_transit', 'In Transit'), ('delivered', 'Delivered'), ('review_request', 'Review Request'), ('payout_received', 'Payout Received'), ('new_message', 'New Message'), ('system_alert', 'System Alert')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('is_sent_sms', models.BooleanField(default=False)),
                ('is_sent_email', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='farmers_app.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='farmers_app.product')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/')),
                ('alt_text', models.CharField(blank=True, max_length=200)),
                ('is_main', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='farmers_app.product')),
            ],
            options={
                'ordering': ['sort_order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='SMSProductListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=15)),
                ('message_content', models.TextField()),
                ('product_name', models.CharField(blank=True, max_length=200)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('unit', models.CharField(blank=True, max_length=20)),
                ('is_processed', models.BooleanField(default=False)),
                ('processing_error', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='farmers_app.product')),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sms_listings', to='farmers_app.farmerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='farmers_app.category')),
            ],
            options={
                'verbose_name_plural': 'Sub Categories',
                'ordering': ['name'],
                'unique_together': {('category', 'name')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='farmers_app.subcategory'),
        ),
        migrations.CreateModel(
            name='SubCounty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcounties', to='farmers_app.county')),
            ],
            options={
                'verbose_name_plural': 'Sub Counties',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='farmerprofile',
            name='subcounty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farmers_app.subcounty'),
        ),
        migrations.AddField(
            model_name='buyerprofile',
            name='subcounty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farmers_app.subcounty'),
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='farmers_app.order')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SupportMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='support_attachments/')),
                ('is_internal', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='farmers_app.supportticket')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransporterProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(blank=True, max_length=200)),
                ('vehicle_type', models.CharField(choices=[('motorcycle', 'Motorcycle'), ('tuk_tuk', 'Tuk Tuk'), ('pickup', 'Pickup Truck'), ('van', 'Van'), ('truck', 'Truck'), ('lorry', 'Lorry')], max_length=20)),
                ('vehicle_registration', models.CharField(max_length=20, unique=True)),
                ('vehicle_capacity', models.DecimalField(decimal_places=2, help_text='Capacity in kg', max_digits=8)),
                ('max_distance', models.PositiveIntegerField(default=100, help_text='Maximum delivery distance in km')),
                ('rate_per_km', models.DecimalField(decimal_places=2, max_digits=6)),
                ('minimum_charge', models.DecimalField(decimal_places=2, default=200, max_digits=8)),
                ('mpesa_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?254\\d{9}$')])),
                ('driving_license', models.CharField(max_length=50)),
                ('insurance_number', models.CharField(blank=True, max_length=100)),
                ('total_deliveries', models.PositiveIntegerField(default=0)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('rating', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_available', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('base_county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transporters', to='farmers_app.county')),
                ('service_counties', models.ManyToManyField(related_name='available_transporters', to='farmers_app.county')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='transporter_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='transporter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deliveries', to='farmers_app.transporterprofile'),
        ),
        migrations.CreateModel(
            name='DeliveryRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickup_locations', models.JSONField()),
                ('delivery_location', models.TextField()),
                ('estimated_distance', models.DecimalField(decimal_places=2, help_text='Distance in km', max_digits=8)),
                ('estimated_duration', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_route', to='farmers_app.order')),
                ('transporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farmers_app.transporterprofile')),
            ],
        ),
        migrations.CreateModel(
            name='TransporterReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('title', models.CharField(blank=True, max_length=200)),
                ('comment', models.TextField(blank=True)),
                ('timeliness', models.PositiveIntegerField(blank=True, choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], null=True)),
                ('communication', models.PositiveIntegerField(blank=True, choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], null=True)),
                ('care_of_goods', models.PositiveIntegerField(blank=True, choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], null=True)),
                ('is_approved', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farmers_app.buyerprofile')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transporter_reviews', to='farmers_app.order')),
                ('transporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='farmers_app.transporterprofile')),
            ],
        ),
        migrations.CreateModel(
            name='UserWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_earned', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_withdrawn', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('mpesa_number', models.CharField(blank=True, max_length=15)),
                ('auto_withdraw_enabled', models.BooleanField(default=False)),
                ('minimum_balance_for_withdrawal', models.DecimalField(decimal_places=2, default=100, max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('credit_sale', 'Credit from Sale'), ('credit_delivery', 'Credit from Delivery'), ('debit_withdrawal', 'Withdrawal'), ('debit_fee', 'Platform Fee'), ('refund', 'Refund')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mpesa_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='farmers_app.mpesatransaction')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='farmers_app.order')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='farmers_app.userwallet')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('subcounty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wards', to='farmers_app.subcounty')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='farmerprofile',
            name='ward',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farmers_app.ward'),
        ),
        migrations.AddField(
            model_name='buyerprofile',
            name='ward',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farmers_app.ward'),
        ),
        migrations.CreateModel(
            name='WhatsAppOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=15)),
                ('customer_name', models.CharField(blank=True, max_length=200)),
                ('message_content', models.TextField()),
                ('delivery_location', models.TextField(blank=True)),
                ('parsed_products', models.JSONField(blank=True, null=True)),
                ('estimated_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('processing_error', models.TextField(blank=True)),
                ('bot_response', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('county', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='farmers_app.county')),
                ('created_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='farmers_app.order')),
            ],
        ),
        migrations.CreateModel(
            name='FarmerReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('title', models.CharField(blank=True, max_length=200)),
                ('comment', models.TextField(blank=True)),
                ('product_quality', models.PositiveIntegerField(blank=True, choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], null=True)),
                ('communication', models.PositiveIntegerField(blank=True, choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], null=True)),
                ('packaging', models.PositiveIntegerField(blank=True, choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], null=True)),
                ('is_approved', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farmers_app.buyerprofile')),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='farmers_app.farmerprofile')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_reviews', to='farmers_app.order')),
            ],
            options={
                'unique_together': {('farmer', 'buyer', 'order')},
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='farmers_app.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farmers_app.product')),
            ],
            options={
                'unique_together': {('cart', 'product')},
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['slug'], name='farmers_app_slug_b9fe8b_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='farmers_app_sku_df6661_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', 'is_active'], name='farmers_app_categor_ade4c1_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['farmer', 'is_active'], name='farmers_app_farmer__e66f81_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='subcounty',
            unique_together={('county', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='transporterreview',
            unique_together={('transporter', 'buyer', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='ward',
            unique_together={('subcounty', 'name')},
        ),
    ]
